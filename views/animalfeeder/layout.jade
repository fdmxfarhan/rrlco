doctype html
html(lang="en")
    head
        title PetFeeder
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        meta(name="theme-color" content="#4361EE")
        link(rel="manifest" href="/css/animalfeeder/manifest.json")
        script(src="/js/jquery-3.5.1.min.js")
        link(rel="shortcut icon", href="/img/logo.png", type="image/x-icon")
        link(rel="stylesheet" href="/fontawesome-free-6.6.0-web/css/all.css")
        link(rel='stylesheet', href='/css/messages.css')
        link(rel='stylesheet', href='/css/animalfeeder/layout.css')
        block styles
        -if(theme){
            -if(theme == 'light'){
                link(rel='stylesheet', href='/css/theme.css')
            -}else{
                link(rel='stylesheet', href='/css/theme-dark.css')
            -}
        -}else{
            link(rel='stylesheet', href='/css/theme.css')
        -}
        script(src="/socket.io/socket.io.js")
    body 
        .black-modal
        block content
        script.
            if ('serviceWorker' in navigator) {
                navigator.serviceWorker.register('/js/service-worker.js').then(function(registration) {
                    console.log('Service Worker registered with scope:', registration.scope);
                }).catch(function(error) {
                    console.log('Service Worker registration failed:', error);
                });
            }
            let deferredPrompt;

            window.addEventListener('beforeinstallprompt', (e) => {
                // Prevent the mini-infobar from appearing on mobile
                e.preventDefault();
                // Stash the event so it can be triggered later
                deferredPrompt = e;
                
                // Optionally, show a custom install button to prompt the user
                const installButton = document.querySelector('#install-button');
                installButton.style.display = 'block';
                
                installButton.addEventListener('click', () => {
                // Show the install prompt
                deferredPrompt.prompt();
                // Wait for the user to respond to the prompt
                deferredPrompt.userChoice.then((choiceResult) => {
                    if (choiceResult.outcome === 'accepted') {
                    console.log('User accepted the install prompt');
                    } else {
                    console.log('User dismissed the install prompt');
                    }
                    deferredPrompt = null;
                });
                });
            });