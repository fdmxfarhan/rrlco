extends ../layout

block styles
    link(rel="stylesheet", href="/css/courses/course-view.css")
    link(rel="stylesheet", href="/css/forms.css")

block content
    .course-view 
        .course-cont-view
            .content
                .form-view
                    form(action="/courses/edit-course" method="POST")
                        input.hide(type="text" name="courseID" value="#{course._id}")
                        .raw 
                            input.dual(type="text" name="title" value="#{course.title}" placeholder="عنوان")
                            input.quarter(type="number" name="price" value="#{course.price}" placeholder="قیمت (تومان)")
                            input.quarter(type="number" name="nodiscountprice" value="#{course.nodiscountprice}" placeholder="قیمت بدون تخفیف")
                        .raw
                            textarea.short(name="shortdescription" placeholder="توضیحات کوتاه") #{course.shortdescription}
                        .raw
                            //- textarea.long(name="description" placeholder="توضیحات کامل") #{course.description}
                            textarea#edit(name="description" style="margin-top: 30px;" placeholder="Type some text")!= course.description
                        .raw 
                            .label-quarter مدرس:
                            //- input.quarter(type="text" name="teacher" value="#{course.teacher}" placeholder="مدرس")
                            select.quarter(name="teacherID") 
                                option(value="#{course.teacherID}")= course.teacher
                                -for(var i=0; i<teachers.length; i++)
                                    option(value="#{teachers[i]._id}") #{teachers[i].firstName} #{teachers[i].lastName}
                            select.quarter(name="type" value="#{course.type}") 
                                option(value="#{course.type}")= course.type
                                -for(var i=0; i<coursetypes.length; i++)
                                    option(value="#{coursetypes[i]}")= coursetypes[i]
                            select.quarter(name="category" value="#{course.category}") 
                                option(value="#{course.category}")= course.category
                                -for(var i=0; i<courseCategories.length; i++)
                                    option(value="#{courseCategories[i]}")= courseCategories[i]
                        .raw 
                            .label-quarter تعداد جلسات:
                            input.quarter(type="number" name="sessions" value="#{course.sessions}" placeholder="تعداد جلسات")
                            .label-quarter تعداد ساعت:
                            input.quarter(type="number" name="hours" value="#{course.totalTime.hours}" placeholder="تعداد ساعت")
                        .raw 
                            .label-quarter تعداد دقیقه:
                            input.quarter(type="number" name="minutes" value="#{course.totalTime.minutes}" placeholder="تعداد دقیقه")
                            .label-quarter ظرفیت:
                            input.quarter(type="number" name="capacity" value="#{course.capacity}" placeholder="ظرفیت")
                        .raw 
                            .label-quarter حداقل تعداد:
                            input.quarter(type="number" name="minCap" value="#{course.minCap}" placeholder="حداقل تعداد")
                            .label-quarter وزن (ترتیب):
                            input.quarter(type="number" name="sortWeight" value="#{course.sortWeight}" placeholder="وزن (ترتیب)")
                        .raw 
                            .label-quarter لینک کلاس:
                            input.dual(type="text" name="classLink" value="#{course.classLink}" placeholder="لینک کلاس")
                        .align-left
                            button.red(type="submit") ثبت

        .sidebar-view 
            //- include sessions
            include buy-course
                    
            include sidebar
    script. 
        document.getElementById('navlink-3').classList.add('active');

    script(src="https://cdn.tiny.cloud/1/4hadxl3pj0it7cd5uuxfwif1ij4vjx1e2lbflw2iv89rmr6x/tinymce/8/tinymce.min.js" referrerpolicy="origin" crossorigin="anonymous")
    script.
        tinymce.init({
            selector: 'textarea#edit',
            plugins: [
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace','table', 'visualblocks', 'wordcount',
                //- // Core editing features
                //- 'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                //- // Your account includes a free trial of TinyMCE premium features
                //- // Try the most popular premium features until Aug 18, 2025:
                //- 'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
            
            // RTL Configuration
            //- directionality: 'rtl',
            //- content_style: 'body { direction: rtl; text-align: right; }',
            
            // Image Upload Configuration
            images_upload_url: '/upload/blog-upload-image',
            images_upload_base_path: '/',
            images_upload_credentials: true,
            automatic_uploads: true,
            
            // Handle upload errors and success
            images_upload_handler: function (blobInfo, success, failure, progress) {
                return new Promise(function(resolve, reject) {
                    var xhr, formData;
                    xhr = new XMLHttpRequest();
                    xhr.withCredentials = true;
                    xhr.open('POST', '/upload/blog-upload-image');
                    
                    xhr.upload.onprogress = function (e) {
                        if (progress && e.lengthComputable) {
                            progress(e.loaded / e.total * 100);
                        }
                    };
                    
                    xhr.onload = function() {
                        var json;
                        if (xhr.status !== 200) {
                            reject('HTTP Error: ' + xhr.status);
                            return;
                        }
                        
                        try {
                            json = JSON.parse(xhr.responseText);
                        } catch (e) {
                            reject('Invalid JSON response');
                            return;
                        }
                        
                        // Handle both 'link' and 'location' response formats
                        var imageUrl = json.link || json.location;
                        if (!imageUrl) {
                            reject('No image URL in response');
                            return;
                        }
                        
                        resolve(imageUrl);
                    };
                    
                    xhr.onerror = function () {
                        reject('Image upload failed due to a XHR transport error. Code: ' + xhr.status);
                    };
                    
                    formData = new FormData();
                    formData.append('file', blobInfo.blob(), blobInfo.filename());
                    xhr.send(formData);
                });
            }
        });